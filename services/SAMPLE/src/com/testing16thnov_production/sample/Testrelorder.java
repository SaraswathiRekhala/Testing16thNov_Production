/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing16thnov_production.sample;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Testrelorder generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`TESTRELORDER`")
@IdClass(TestrelorderId.class)
public class Testrelorder implements Serializable {

    private Integer column1;
    private Integer column2;
    private Integer column3;
    private Testrelorderchild testrelorderchild;

    @Id
    @Column(name = "`COLUMN1`", nullable = false, scale = 0, precision = 10)
    public Integer getColumn1() {
        return this.column1;
    }

    public void setColumn1(Integer column1) {
        this.column1 = column1;
    }

    @Id
    @Column(name = "`COLUMN2`", nullable = false, scale = 0, precision = 10)
    public Integer getColumn2() {
        return this.column2;
    }

    public void setColumn2(Integer column2) {
        this.column2 = column2;
    }

    @Column(name = "`COLUMN3`", nullable = true, scale = 0, precision = 10)
    public Integer getColumn3() {
        return this.column3;
    }

    public void setColumn3(Integer column3) {
        this.column3 = column3;
    }

    @OneToOne(fetch = FetchType.EAGER, mappedBy = "testrelorder")
    public Testrelorderchild getTestrelorderchild() {
        return this.testrelorderchild;
    }

    public void setTestrelorderchild(Testrelorderchild testrelorderchild) {
        this.testrelorderchild = testrelorderchild;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Testrelorder)) return false;
        final Testrelorder testrelorder = (Testrelorder) o;
        return Objects.equals(getColumn1(), testrelorder.getColumn1()) &&
                Objects.equals(getColumn2(), testrelorder.getColumn2());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getColumn1(),
                getColumn2());
    }
}

