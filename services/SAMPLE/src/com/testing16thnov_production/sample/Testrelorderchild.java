/*Copyright (c) 2017-2018 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing16thnov_production.sample;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

/**
 * Testrelorderchild generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`TESTRELORDERCHILD`")
@IdClass(TestrelorderId.class)
public class Testrelorderchild implements Serializable {

    private Integer column2;
    private Integer column1;
    private int col3;
    private Testrelorder testrelorder;

    @Id
    @Column(name = "`COL2`", nullable = false, insertable = false, updatable = false, scale = 0, precision = 10)
    public Integer getColumn2() {
        return this.column2;
    }

    public void setColumn2(Integer column2) {
        this.column2 = column2;
    }

    @Id
    @Column(name = "`COL1`", nullable = false, insertable = false, updatable = false, scale = 0, precision = 10)
    public Integer getColumn1() {
        return this.column1;
    }

    public void setColumn1(Integer column1) {
        this.column1 = column1;
    }

    @Column(name = "`COL3`", nullable = false, scale = 0, precision = 10)
    public int getCol3() {
        return this.col3;
    }

    public void setCol3(int col3) {
        this.col3 = col3;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @PrimaryKeyJoinColumn
    public Testrelorder getTestrelorder() {
        return this.testrelorder;
    }

    public void setTestrelorder(Testrelorder testrelorder) {
        if(testrelorder != null) {
            this.column1 = testrelorder.getColumn1();
            this.column2 = testrelorder.getColumn2();
        }

        this.testrelorder = testrelorder;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Testrelorderchild)) return false;
        final Testrelorderchild testrelorderchild = (Testrelorderchild) o;
        return Objects.equals(getColumn2(), testrelorderchild.getColumn2()) &&
                Objects.equals(getColumn1(), testrelorderchild.getColumn1());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getColumn2(),
                getColumn1());
    }
}

